<?php

/*
 * This file is part of the Incipio package.
 *
 * (c) Florian Lefevre
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace App\Repository\Treso;

use App\Entity\Treso\BV;
use Doctrine\ORM\EntityRepository;

/**
 * NoteDeFraisRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BVRepository extends EntityRepository
{
    /**
     * @return array
     */
    public function findAllByMandat()
    {
        $entities = $this->findBy([], ['mandat' => 'desc', 'dateDeVersement' => 'asc']);
        $bvsParMandat = [];
        /** @var BV $bv */
        foreach ($entities as $bv) {
            $mandat = $bv->getMandat();
            if (array_key_exists($mandat, $bvsParMandat)) {
                $bvsParMandat[$mandat][] = $bv;
            } else {
                $bvsParMandat[$mandat] = [$bv];
            }
        }

        return $bvsParMandat;
    }

    /**
     * Renvoie les bv d'un mois concerné
     * YEAR MONTH DAY sont défini dans DashBoardBundle/DQL (qui doit devenir FrontEndBundle).
     *
     * @param      $month
     * @param      $year
     * @param bool $trimestriel
     *
     * @return array
     */
    public function findAllByMonth($month, $year, $trimestriel = false)
    {
        $qb = $this->_em->createQueryBuilder();
        $query = $qb->select('b')
                     ->from(BV::class, 'b');
        if ($trimestriel) {
            $query->where("MONTH(b.dateDeVersement) >= $month")
                  ->andWhere("MONTH(b.dateDeVersement) < ($month + 2)");
        } else {
            $query->where("MONTH(b.dateDeVersement) = $month");
        }

        $query->andWhere("YEAR(b.dateDeVersement) = $year")->orderBy('b.dateDeVersement');

        return $query->getQuery()->getResult();
    }
}
